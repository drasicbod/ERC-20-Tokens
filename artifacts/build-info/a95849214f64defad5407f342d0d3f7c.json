{
	"id": "a95849214f64defad5407f342d0d3f7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"keccak.sol": {
				"content": "pragma solidity >=0.4.4 <0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n contract hash{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"keccak.sol": {
				"hash": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"keccak.sol\":71:86  contract hash{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"keccak.sol\":71:86  contract hash{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204e10ecc180122949d2c2ed5890f03baf152ae116ec6c6924bfd6804cea8a552a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204e10ecc180122949d2c2ed5890f03baf152ae116ec6c6924bfd6804cea8a552a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E LT 0xEC 0xC1 DUP1 SLT 0x29 0x49 0xD2 0xC2 0xED PC SWAP1 CREATE EXTCODESIZE 0xAF ISZERO 0x2A 0xE1 AND 0xEC PUSH13 0x6924BFD6804CEA8A552A64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "71:15:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212204e10ecc180122949d2c2ed5890f03baf152ae116ec6c6924bfd6804cea8a552a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E LT 0xEC 0xC1 DUP1 SLT 0x29 0x49 0xD2 0xC2 0xED PC SWAP1 CREATE EXTCODESIZE 0xAF ISZERO 0x2A 0xE1 AND 0xEC PUSH13 0x6924BFD6804CEA8A552A64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "71:15:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 71,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 86,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e10ecc180122949d2c2ed5890f03baf152ae116ec6c6924bfd6804cea8a552a64736f6c634300060c0033",
									".code": [
										{
											"begin": 71,
											"end": 86,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 86,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 86,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 86,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 86,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 86,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"keccak.sol\":\"hash\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"keccak.sol\":{\"keccak256\":\"0x8fdb7c51583b1970a6ed4937762faf5106a71d7dba22a5ef19c78bfd077038b4\",\"urls\":[\"bzz-raw://b5aa0c2584c9685e32379c470c2192834483d7c92be37f5c74a98336c8ef9fb2\",\"dweb:/ipfs/QmbcBZYmceFzsLg54mQdXerqCYCMGCkcKCbZ67LLpW475L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "keccak.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "keccak.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"keccak.sol": {
				"ast": {
					"absolutePath": "keccak.sol",
					"exportedSymbols": {
						"hash": [
							3
						]
					},
					"id": 4,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".4",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 3,
							"linearizedBaseContracts": [
								3
							],
							"name": "hash",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 4,
							"src": "71:15:0"
						}
					],
					"src": "0:86:0"
				},
				"id": 0
			}
		}
	}
}